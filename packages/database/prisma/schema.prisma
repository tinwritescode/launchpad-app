// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum AccessType {
    PUBLIC
    PRIVATE
    COMMUNITY
}

enum Status {
    ACTIVE
    INACTIVE
    DELETED
}

enum Role {
    SUPER_ADMIN
    ADMIN
    USER
}

model User {
    id            String    @id @default(uuid())
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    walletAddress String    @unique
    roles         Role[]
    projects      Project[]
}

model Chain {
    id    String @id @default(uuid())
    name  String
    image String
}

model TokenomicsItem {
    id        String  @id @default(uuid())
    name      String
    value     Int
    Project   Project @relation(fields: [projectId], references: [id])
    projectId String
}

model Project {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    //  Main fields
    IDOContract IDOContract[]

    // Information fields
    name               String
    image              String
    status             Status           @default(INACTIVE)
    token              Token? // https://www.prisma.io/docs/concepts/components/prisma-schema/relations/one-to-one-relations
    summaryContent     String
    videoURL           String
    ScheduleRound      ScheduleRound[]
    comparisionContent String
    TokenomicsItem     TokenomicsItem[]
    roadmapContent     String
    User               User?            @relation(fields: [ownerId], references: [id])
    ownerId            String
    targettedRaise     String
}

model IDOContract {
    id            String   @id @default(uuid())
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    address       String
    Project       Project  @relation(fields: [projectId], references: [id])
    projectId     String
    name          String
    whitelistDump String?
}

model Token {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    address   String
    Project   Project  @relation(fields: [projectId], references: [id])
    projectId String   @unique
}

model ScheduleRound {
    id            String   @id @default(uuid())
    Project       Project  @relation(fields: [projectId], references: [id])
    projectId     String
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    name          String
    startTime     DateTime
    endTime       DateTime
    pricePerToken Int?
}
