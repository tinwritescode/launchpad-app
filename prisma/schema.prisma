// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum AccessType {
    PUBLIC
    PRIVATE
    COMMUNITY
}

enum Status {
    ACTIVE
    INACTIVE
    DELETED
}

enum Role {
    SUPER_ADMIN
    ADMIN
    USER
}

model User {
    id            String   @id @default(uuid())
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    walletAddress String   @unique
    roles         Role[]
}

model Chain {
    id      String    @id @default(uuid())
    name    String
    image   String
    Project Project[]
}

model TokenomicsItem {
    id        String  @id @default(uuid())
    name      String
    value     Int
    Project   Project @relation(fields: [projectId], references: [id])
    projectId String
}

model Project {
    id                 String           @id @default(uuid())
    createdAt          DateTime         @default(now())
    updatedAt          DateTime         @updatedAt
    pricePerToken      Int
    tokenSymbol        String
    name               String
    image              String
    Chain              Chain            @relation(fields: [chainId], references: [id])
    chainId            String
    progress           String
    status             Status           @default(INACTIVE)
    startTime          DateTime
    endTime            DateTime
    totalRaise         Int?
    targetRaise        Int?
    allocation         String?
    participants       Int?
    Token              Token           @relation(fields: [tokenId], references: [id])
    tokenId            String
    summaryContent     String
    videoURL           String
    ScheduleRound      ScheduleRound[]
    scheduleOpenDate   DateTime
    scheduleCloseDate  DateTime
    comparisionContent String
    TokenomicsItem     TokenomicsItem[]
    roundmapContent    String
}

model Token {
    id          String   @id @default(uuid())
    Project     Project[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    name        String
    symbol      String
    decimals    Int
    totalSupply Int
    address     String
}

model ScheduleRound {
    id        String   @id @default(uuid())
    Project   Project  @relation(fields: [projectId], references: [id])
    projectId String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String
    startTime DateTime
    endTime   DateTime
}

model DemoProject {
    id   String @id @default(uuid())
    name String
}
